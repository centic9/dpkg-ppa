.\" dpkg manual page - deb-src-control(5)
.\"
.\" Copyright Â© 2010 Oxan van Leeuwen <oxan@oxanvanleeuwen.nl>
.\" Copyright Â© 2011 RaphaÃ«l Hertzog <hertzog@debian.org>
.\" Copyright Â© 2011-2013 Guillem Jover <guillem@debian.org>
.\"
.\" This is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <https://www.gnu.org/licenses/>.
.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH deb\-src\-control 5 2013\-09\-17 "Projet Debian" Debian
.SH NOM
deb\-src\-control \- Format du fichier principal de contrôle dans les paquets
Debian
.
.SH SYNOPSIS
contrôle
.
.SH DESCRIPTION
Chaque paquet source Debian contient un fichier «\ control\ » maître, qui
contient au moins 2 paragraphes, séparés par une ligne vide. Le premier
paragraphe donne toutes les informations à propos du paquet source en
général et chaque paragraphe qui suit décrit exactement un paquet
binaire. Chaque paragraphe contient au moins un champ. Un champ commence par
le nom du champ, par exemple \fBPackage\fP ou \fBSection\fP (la casse n'est pas
significative), suivi d'un caractère «\ deux\-points\ », du contenu du champ et
d'un retour à la ligne. Les champs multi\-lignes sont aussi possibles, mais
chaque ligne supplémentaire, qui ne comporte pas de nom de champ, doit
commencer par au moins un espace. Le contenu des champs multi\-lignes est en
général réassemblé en une ligne unique par les outils (sauf pour le champ
\fBDescription\fP, voir ci\-dessous). Pour inclure des lignes vides dans un
champ multi\-lignes, il est nécessaire de mettre un point après l'espace
initial. Les lignes commençant pas \fB«\ #\ »\fP sont traitées comme des
commentaires.
.
.SH "LES CHAMPS SOURCE"
.TP 
\fBSource:\fP \fInom du paquet source\fP (requis)
La valeur de ce champ est le nom du paquet source et doit correspondre au
nom du paquet source dans le fichier debian/changelog. Un nom de paquet doit
être constitué uniquement de lettres minuscules (a\-z), de chiffres (0\-9),
des caractères plus (+) et moins (\-) et de points (.). Les noms de paquets
doivent comporter au moins deux caractères et doivent commencer par un
caractère alphanumérique.

.TP 
\fBMaintainer:\fP \fInom complet et adresse électronique\fP (requis)
Le format de ce champ sera «\ Jean Dupont <jdupont@foo.com>\ »\ ; et
indique le créateur du paquet, par opposition à l'auteur du programme mis en
paquet.

.TP 
\fBUploaders:\fP\fI nom complet et adresse électronique\fP
Affiche les noms et les adresses électroniques des co\-responsables du
paquet, au même format que le champ Maintainer. Des co\-responsables
multiples peuvent être séparés par une virgule.

.TP 
\fBStandards\-Version:\fP\fI chaîne de version\fP
Ce champ indique la version la plus récente des normes (constituées par la
Charte Debian et les textes indiqués dans le paquet \fBdebian\-policy\fP)
auxquelles ce paquet se conforme.

.TP 
\fBHomepage:\fP\fI URL\fP
URL de la page d'accueil du projet amont.

.TP 
\fBBugs:\fP\fI URL\fP
Indique l'\fIURL\fP du système de suivi de bogues (BTS) de ce paquet. Le format
utilisé est \fItype_de_bts\fP\fB://\fP\fIadresse_du_btsE\fP, par exemple
\fBdebbugs://bugs.debian.org\fP. Ce champ est en général inutile.

.TP 
\fBVcs\-*:\fP\fI URL\fP
Ce champ indique l'\fIURL\fP du système de gestion de version utilisé pour la
gestion du paquet. Les systèmes gérés sont \fBArch\fP, \fBBzr\fP (Bazaar), \fBCvs\fP,
\fBDarcs\fP, \fBGit\fP, \fBHg\fP (Mercurial), \fBMtn\fP (Monotone) et \fBSvn\fP
(Subversion). En général, ce champ fait référence à la dernière version du
paquet, c'est\-à\-dire la branche principale ou le «\ trunk\ ».

.TP 
\fBVcs\-Browser:\fP\fI URL\fP
indique l'\fIURL\fP de l'interface web permettant de parcourir le dépôt du
système de gestion de version.

.TP 
\fBOrigin:\fP\fI nom\fP
indique le nom de la distribution dont le paquet provient. Ce champ n'est
souvent pas nécessaire.

.TP 
\fBSection:\fP \fI section\fP
champ général qui indique la catégorie d'un paquet\ ; cette catégorie est
fondée sur les programmes que ce paquet installe. «\ Utils\ », «\ net\ »,
«\ mail\ », «\ text\ », «\ x11\ », etc. représentent quelques catégories
habituelles.

.TP 
\fBPriority:\fP\fI priorité\fP
définit l'importance du paquet à l'intérieur du système
général. «\ Required\ », «\ standard\ », «\ optional\ », «\ extra\ »,
etc. représentent des priorités habituelles.

Les champs \fBSection\fP et \fBPriority\fP possèdent un ensemble défini de valeurs
acceptées, tiré de la Charte Debian («\ Debian Policy\ »). On peut en trouver
une liste dans la version la plus récente du paquet \fBdebian\-policy\fP.

.TP 
\fBBuild\-Depends:\fP\fI liste\-de\-paquets\fP
Liste de paquets à installer et configurer pour pouvoir construire le paquet
source. Si une dépendance est ajoutée à cette liste, l'effet sera le même
que si elle était ajoutée à la fois dans  \fBBuild\-Depends\-Arch\fP et
\fBBuild\-Depends\-Indep\fP, en ayant de plus l'effet d'être prise en compte pour
les constructions de paquets source uniquement (« source\-only builds »).

.TP 
\fBBuild\-Depends\-Arch:\fP\fIliste\-de\-paquets\fP
Same as \fBBuild\-Depends\fP, but they are only needed when building the
architecture dependent packages. The \fBBuild\-Depends\fP are also installed in
this case. This field is supported since dpkg 1.16.4; in order to build with
older dpkg versions, \fBBuild\-Depends\fP should be used instead.

.TP 
\fBBuild\-Depends\-Indep:\fP\fI liste\-de\-paquets\fP
liste analogue à \fBBuild\-Depends\fP, mais restreinte aux paquets nécessaires
pour construire les paquets indépendants de l'architecture. Les paquets
indiqués dans \fBBuild\-Depends\fP sont alors aussi installés.

.TP 
\fBBuild\-Conflicts:\fP\fI liste de paquets\fP
Liste de paquets qui ne doivent pas être installés lors de la construction
du paquet, par exemple s'ils interfèrent avec le système de construction
utilisé. Si une dépendance est ajoutée à cette liste, l'effet sera le même
que si elle était ajoutée à la fois dans  \fBBuild\-Conflicts\-Arch\fP et
\fBBuild\-Conflicts\-Indep\fP, en ayant de plus l'effet d'être prise en compte
pour les constructions de paquets source uniquement («\ source\-only
builds\ »).

.TP 
\fBBuild\-Conflicts\-Arch:\fP\fI liste de paquets\fP
Same as \fBBuild\-Conflicts\fP, but only when building the architecture
dependent packages. This field is supported since dpkg 1.16.4; in order to
build with older dpkg versions, \fBBuild\-Conflicts\fP should be used instead.

.TP 
\fBBuild\-Conflicts\-Indep:\fP\fI liste\-de\-paquets\fP
liste analogue à \fBBuild\-Conflicts\fP mais restreinte à la construction des
paquets indépendants de l'architecture.

.PP
The syntax of the \fBBuild\-Depends\fP, \fBBuild\-Depends\-Arch\fP and
\fBBuild\-Depends\-Indep\fP fields is a list of groups of alternative
packages. Each group is a list of packages separated by vertical bar (or
"pipe") symbols, "|". The groups are separated by commas. Commas are to be
read as "AND", and pipes as "OR", with pipes binding more tightly. Each
package name is optionally followed by a version number specification in
parentheses, an architecture specification in square brackets, and a profile
specification in angle brackets.

The syntax of the \fBBuild\-Conflicts\fP, \fBBuild\-Conflicts\-Arch\fP and
\fBBuild\-Conflicts\-Indep\fP fields is a list of comma\-separated package names,
where the comma is read as an "AND". Specifying alternative packages using a
"pipe" is not supported.  Each package name is optionally followed by a
version number specification in parentheses, an architecture specification
in square brackets, and a profile specification in angle brackets.

Un numéro de version peut commencer par «\ >>\ », et dans ce cas toute
version supérieure correspondra, et il peut indiquer (ou pas) le numéro de
révision pour le paquet Debian (les deux numéros étant séparés par un trait
d'union). Voici les relations acceptées pour les versions\ : «\ >>\ »
pour supérieur à, «\ <<\ » pour inférieur à, «\ >=\ » pour supérieur
ou égal, «\ <=\ » pour inférieur ou égal, et «\ =\ » pour égal à.

An architecture specification consists of one or more architecture names,
separated by whitespace. Exclamation marks may be prepended to each of the
names, meaning "NOT".

A profile specification consists of one or more profile names, prefixed with
the "\fBprofile.\fP" namespace, separated by whitespace. Exclamation marks may
be prepended to each of the names, meaning "NOT".

Veuillez noter que les dépendance des paquets du jeu \fBbuild\-essential\fP
peuvent être omises et qu'il n'est pas possible de déclarer des conflits
avec ces paquets. La liste des paquets concernés est fournie par le paquet
build\-essential.


.SH "CHAMPS BINAIRES"

.LP
Veuillez noter que les champs \fBPriority\fP, \fBSection\fP et \fBHomepage\fP peuvent
être placés dans le paragraphe d'un paquet binaire et leur valeur remplace
alors celle du paquet source.

.TP 
\fBPackage:\fP \fInom du paquet binaire\fP (requis)
Ce champ sert à indiquer le nom du paquet binaire. Les restrictions sont les
mêmes que celles des paquets source.

.TP 
\fBArchitecture:\fP \fIarch\fP|\fBall\fP|\fBany\fP (requis)
Ce champ indique l'architecture matérielle sur laquelle le paquet peut être
utilisé. Les paquets qui peuvent être utilisés sur toute architecture
doivent utiliser le champ \fBany\fP. Les paquets indépendants de
l'architecture, tels les scripts shell ou Perl ou la documentation utilisent
la valeur \fBall\fP. Pour restreindre un paquet à certaines architectures,
leurs noms doivent être indiqués séparés par des espaces. Il est également
possible d'utiliser des noms génériques d'architectures dans cette liste
(voir \fBdpkg\-architecture\fP(1) pour plus d'informations sur ces architectures
génériques).

.TP 
\fBPackage\-Type:\fP \fBdeb\fP|\fBudeb\fP
Ce champ indique le type de paquet. La valeur «\ udeb\ » est à utiliser pour
les paquets à taille contrôlée utilisés par l'installateur Debian. La valeur
«\ deb\ » est la valeur par défaut qui est utilisée si le champ n'est pas
présent. De nouveaux types pourraient être ajoutés au fil du temps.

.TP 
\fBSubarchitecture:\fP\fI valeur\fP
.TQ
\fBKernel\-Version:\fP\fI valeur\fP
.TQ
\fBInstaller\-Menu\-Item:\fP\fI valeur\fP
Ces champs sont utilisés par l'installateur et ne sont en général pas
nécessaires. Veuillez consulter
/usr/share/doc/debian\-installer/devel/modules.txt fourni avec le paquet
\fBdebian\-installer\fP pour plus de détails.

.TP 
\fBEssential:\fP \fByes\fP|\fBno\fP
.TQ
\fBMulti\-Arch:\fP \fBsame\fP|\fBforeign\fP|\fBallowed\fP
.TQ
\fBTag:\fP\fI liste\-d'étiquettes\fP
.TQ
\fBDescription:\fP \fIdescription courte\fP (requis)
Ces champs sont décrits dans la page de manuel de \fBdeb\-control\fP(5), car ils
sont copiés littéralement dans le fichier «\ control\ » du paquet binaire.

.TP 
\fBDepends:\fP\fI liste\-de\-paquets\fP
.TQ
\fBPre\-Depends:\fP\fI liste\-de\-paquets\fP
.TQ
\fBRecommends:\fP\fI liste\-de\-paquets\fP
.TQ
\fBSuggests:\fP\fI liste\-de\-paquets\fP
.TQ
\fBBreaks:\fP\fI liste\-de\-paquets\fP
.TQ
\fBEnhances:\fP\fI liste\-de\-paquets\fP
.TQ
\fBReplaces:\fP\fI liste\-de\-paquets\fP
.TQ
\fBConflicts:\fP\fI liste\-de\-paquets\fP
.TQ
\fBProvides:\fP\fI liste\-de\-paquets\fP
.TQ
\fBBuilt\-Using:\fP\fI liste\-de\-paquets\fP
Ces champs indiquent les relations entre les paquets. Ils sont détaillés
dans la page de manuel \fBdeb\-control\fP(5) et dans le paquet \fBdebian\-policy\fP.

.SH "LES CHAMPS UTILISATEUR"
Il est possible d'ajouter des champs définis par l'utilisateur au fichier
«\ control\ ». Les outils les ignoreront. Si ces champs doivent être copiés
vers les fichiers créés, par exemple les paquets binaires, il est
indispensable d'utiliser un schéma de nommage personnalisé\ :\ les champs
doivent commencer par la lettre X suivie de l'une des lettres B, C ou S et
d'un tiret. Si la lettre B est utilisée, le champ sera copié dans le fichier
«\ control\ » du paquet binaire, voir \fBdeb\-control\fP(5). Avec la lettre S, le
champ sera copié dans le fichier «\ control\ » du paquet source créé par
\fBdpkg\-source\fP(1). Enfin, la lettre C provoquera la recopie du champ dans le
fichier de contrôle de l'envoi («\ .changes\ »). Les préfixes X[BCS]\- sont
supprimés lors de ces recopies. Ainsi, un champ \fBXC\-Approved\-By\fP apparaîtra
sous le nom \fBApproved\-By\fP dans le fichier «\ changes\ » mais pas dans le
fichier «\ control\ » du paquet binaire ni dans celui du paquet source.

Il est conseillé de tenir compte que ces champs définis par l'utilisateur se
serviront de l'espace de nommage global et peuvent ainsi, dans le futur,
entrer en collision avec des champs gérés globalement. Pour éviter de telles
situations, il est conseillé de les préfixer avec \fBPrivate\-\fP
(exemple\ :\ \fBXB\-Private\-New\-Field\fP) ce qui aura pour effet de bord de ne pas
provoquer d'avertissement de la part de \fBdpkg\-deb\fP.

.SH EXEMPLE
.\" .RS
.nf
# Commentaire
Source: dpkg
Section: admin
Priority: required
Maintainer: Dpkg Developers <debian\-dpkg@lists.debian.org>
# ce champ est copié dans les paquets source et binaires
XBS\-Upstream\-Release\-Status: stable
Homepage: https://wiki.debian.org/Teams/Dpkg
Vcs\-Browser: http://git.debian.org/?p=dpkg/dpkg.git
Vcs\-Git: git://git.debian.org/git/dpkg/dpkg.git
Standards\-Version: 3.7.3
Build\-Depends: pkg\-config, debhelper (>= 4.1.81),
 libselinux1\-dev (>= 1.28\-4) [!linux\-any]

Package: dpkg\-dev
Section: utils
Priority: optional
Architecture: all
# champ personnalisé dans le paquet binaire
XB\-Mentoring\-Contact: Raphael Hertzog <hertzog@debian.org>
Depends: dpkg (>= 1.14.6), perl5, perl\-modules, cpio (>= 2.4.2\-2), bzip2, lzma,
 patch (>= 2.2\-1), make, binutils, libtimedate\-perl
Recommends: gcc | c\-compiler, build\-essential
Suggests: gnupg, debian\-keyring
Conflicts: dpkg\-cross (<< 2.0.0), devscripts (<< 2.10.26)
Replaces: manpages\-pl (<= 20051117\-1)
Description: Debian package development tools
 This package provides the development tools (including dpkg\-source)
 required to unpack, build and upload Debian source packages.
 .
 Most Debian source packages will require additional tools to build;
 for example, most packages need make and the C compiler gcc.
.fi


.\" .RE
.SH "VOIR AUSSI"
\fBdeb\-control\fP(5), \fBdeb\-version\fP(5), \fBdpkg\-source\fP(1)
.SH TRADUCTION
Ariel VARDI <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas François, 2006.
Veuillez signaler toute erreur à <debian\-l10n\-french@lists.debian.org>.
